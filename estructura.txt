Proyecto #2 - BD2
├── airflow/
|   ├── dags/ (DAGS para reindexar en elastic y procesar el ETL cada 6 horas)
|   ├── dockerfile
|   └── requirements.txt
├── analytics_service/
|   ├── connection/
|   ├── graph_analytics/
|   ├── pages/
|   ├── utils/
|   ├── dockerfile
|   ├── main.py
|   └── requirements.txt
├── api/
|   ├── src/
|   |   ├── config/
|   |   ├── controllers/
|   |   ├── dao/
|   |   ├── db/
|   |   ├── middlewares/
|   |   ├── models/
|   |   ├── routes/
|   |   └── app.js
|   ├── swagger/
|   ├── tests/
|   |   ├── integration/
|   |   ├── unit/
|   |   └── utils/
|   ├── dockerfile
|   ├── dockerfile.test
|   ├── package-lock.json
|   ├── package.json
|   └── server.
├── auth_service/
|   ├── src/
|   |   ├── config/
|   |   ├── controllers/
|   |   ├── dao/
|   |   ├── db/
|   |   ├── middlewares/
|   |   ├── models/
|   |   ├── routes/
|   |   └── app.js
|   ├── swagger/
|   ├── tests/
|   |   ├── integration/
|   |   ├── unit/
|   |   └── utils/
|   ├── dockerfile
|   ├── dockerfile.test
|   ├── package-lock.json
|   ├── package.json
|   └── server.js
├── drivers/
|   └── postgresql-42.7.7.jar (Driver para guardar el metastore en hive)
├── etl_service/
|   ├── connection/
|   ├── extractors/ (extractores de postgres y mongo)
|   ├── warehouse/ (operaciones para procesar el ETL)
|   ├── app.py (mantener el servicio vivo una vez ejecutado el etl)
|   ├── dockerfile
|   ├── etl_job.py
|   └── requirements.txt
├── graph_service/
|   ├── src/
|   |   ├── config/
|   |   ├── controllers/
|   |   ├── middlewares/
|   |   ├── routes/
|   |   ├── services/ (Neo4J y Redis)
|   |   └── app.js
|   ├── swagger/
|   ├── dockerfile
|   ├── package-lock.json
|   ├── package.json
|   └── server.js
├── pruebas/
|   ├── generarDatos.js
|   ├── generarDatosMasivos.js
|   ├── menuPrueba.js
|   ├── package-lock.json
|   ├── package.json
|   └── restaurantes.json
├── search_service/
|   ├── src/
|   |   ├── config/
|   |   ├── controllers/
|   |   ├── middlewares/
|   |   ├── models/
|   |   ├── routes/
|   |   ├── services/ (Elastic y Redis)
|   |   ├── app.js
|   |   └── init.js
|   ├── swagger/
|   ├── tests/
|   |   ├── integration/
|   |   ├── unit/
|   |   └── utils/
|   ├── dockerfile
|   ├── dockerfile.test
|   ├── package-lock.json
|   ├── package.json
|   └── server.js
├── docker-compose.yml
├── estructura.txt
├── init.sql
├── warehouse.sql (Crear dimensiones, tablas de hechos y cubos)
├── warehouse_procedures.sql (Crear procedures/functions para usar)
├── init_cluster.sh
├── set_config.sh
├── nginx.conf
├── README.md
└── template.env

